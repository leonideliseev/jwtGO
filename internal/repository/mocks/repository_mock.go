// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/leonideliseev/jwtGO/models"
)

// MockRefreshToken is a mock of RefreshToken interface.
type MockRefreshToken struct {
	ctrl     *gomock.Controller
	recorder *MockRefreshTokenMockRecorder
}

// MockRefreshTokenMockRecorder is the mock recorder for MockRefreshToken.
type MockRefreshTokenMockRecorder struct {
	mock *MockRefreshToken
}

// NewMockRefreshToken creates a new mock instance.
func NewMockRefreshToken(ctrl *gomock.Controller) *MockRefreshToken {
	mock := &MockRefreshToken{ctrl: ctrl}
	mock.recorder = &MockRefreshTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRefreshToken) EXPECT() *MockRefreshTokenMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRefreshToken) Create(ctx context.Context, refresh *models.Refresh) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, refresh)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockRefreshTokenMockRecorder) Create(ctx, refresh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRefreshToken)(nil).Create), ctx, refresh)
}

// Delete mocks base method.
func (m *MockRefreshToken) Delete(ctx context.Context, tokenID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, tokenID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockRefreshTokenMockRecorder) Delete(ctx, tokenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRefreshToken)(nil).Delete), ctx, tokenID)
}

// Get mocks base method.
func (m *MockRefreshToken) Get(ctx context.Context, tokenID string) (*models.Refresh, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, tokenID)
	ret0, _ := ret[0].(*models.Refresh)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRefreshTokenMockRecorder) Get(ctx, tokenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRefreshToken)(nil).Get), ctx, tokenID)
}

// Update mocks base method.
func (m *MockRefreshToken) Update(ctx context.Context, oldTokenID string, newRefresh *models.Refresh) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, oldTokenID, newRefresh)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockRefreshTokenMockRecorder) Update(ctx, oldTokenID, newRefresh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRefreshToken)(nil).Update), ctx, oldTokenID, newRefresh)
}
